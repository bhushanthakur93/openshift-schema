{
  "description": "PublishingStrategy is the Schema for the publishingstrategies API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
    },
    "spec": {
      "description": "PublishingStrategySpec defines the desired state of PublishingStrategy",
      "type": "object",
      "required": [
        "applicationIngress",
        "defaultAPIServerIngress"
      ],
      "properties": {
        "applicationIngress": {
          "description": "ApplicationIngress defines whether application ingress is internal or external",
          "type": "array",
          "items": {
            "description": "ApplicationIngress defines application ingress",
            "type": "object",
            "required": [
              "certificate",
              "default",
              "dnsName"
            ],
            "properties": {
              "certificate": {
                "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name is unique within a namespace to reference a secret resource.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace defines the space within which the secret name must be unique.",
                    "type": "string"
                  }
                }
              },
              "default": {
                "description": "Default defines default value of ingress when cluster installs",
                "type": "boolean"
              },
              "dnsName": {
                "type": "string"
              },
              "listening": {
                "description": "Listening defines application ingress as internal or external",
                "type": "string"
              },
              "routeSelector": {
                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "defaultAPIServerIngress": {
          "description": "DefaultAPIServerIngress defines whether API is internal or external",
          "type": "object",
          "properties": {
            "listening": {
              "description": "Listening defines internal or external ingress",
              "type": "string"
            }
          }
        }
      }
    },
    "status": {
      "description": "PublishingStrategyStatus defines the observed state of PublishingStrategy",
      "type": "object"
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "cloudingress.managed.openshift.io",
      "kind": "PublishingStrategy",
      "version": "v1alpha1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}